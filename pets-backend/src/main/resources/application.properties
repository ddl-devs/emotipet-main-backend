spring.application.name=pets-backend
# Postgres
spring.datasource.url=${SPRING_DATA_SOURCE_URL:jdbc:postgresql://localhost:5432/pets-backend}
spring.datasource.username=${SPRING_DATA_SOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATA_SOURCE_PASSWORD:postgres}
spring.datasource.driver-class-name=${SPRING_DATA_SOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}
# JPA
spring.jpa.properties.hibernate.dialect=${SPRING_JPA_HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
spring.jpa.properties.hibernate.format_sql=${SPRING_JPA_HIBERNATE_FORMAT_SQL:true}
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:none}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:true}
# Spring Security
spring.security.oauth2.resourceserver.jwt.issuer-url=${KEYCLOAK_SERVER_URL:http://localhost:8082/realms/pets-backend}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_SERVER_URI:http://localhost:8082/realms/pets-backend/protocol/openid-connect/certs}
spring.webclient.ssl.verification.enabled=false
# Keycloak
keycloak.server-url=${KEYCLOAK_SERVER_URL:http://localhost:8082/realms/pets-backend}
keycloak.realm=${KEYCLOAK_REALM:pets-backend}
keycloak.client-id=${KEYCLOAK_CLIENT_ID:pets-backend}
keycloak.username=${KEYCLOAK_USERNAME:admin}
keycloak.password=${KEYCLOAK_PASSWORD:admin}
# Flyway
flyway.enabled=true
flyway.out-of-order=true
flyway.baseline-on-migrate=true
flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
# Prometheus
management.endpoints.web.exposure.include=*
# Logging
logging.level.org.keycloak=${LOGGING_LEVEL_HIBERNATE_KEYCLOAK:DEBUG}
logging.level.org.flywaydb=${LOGGING_LEVEL_HIBERNATE_FLYWAYDB:DEBUG}
logging.level.hibernate.SQL=${LOGGING_LEVEL_HIBERNATE_SQL:DEBUG}
logging.level.hibernate.type.descriptor.sql.BasicBinder=${LOGGING_LEVEL_HIBERNATE_TYPE:TRACE}
#AmazonSQS
spring.cloud.aws.credentials.access-key=${AWS_ACCESS_KEY:access}
spring.cloud.aws.credentials.secret-key=${AWS_SECRET_KEY:secret}
spring.cloud.aws.region.static=${AWS_SQS_REGION:region}
spring.cloud.aws.sqs.enabled=true
# AWS S3
aws.region=${AWS_BUCKET_REGION:region}
aws.access-key=${AWS_ACCESS_KEY:access}
aws.secret-key=${AWS_SECRET_KEY:secret}
aws.bucket.name=${AWS_BUCKET_NAME:name}